
<div id='nodeSection1'>Dialects</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>SOQL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// SFDC Object Query Lanuage -&gt; query only one entity at a time</span></p>
<p class=rvps12><span class=rvts124>SOSL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// SFDC Object Search Language -&gt; query multiple entities simultaneously</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection2'>SELECT</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>List&lt;Account&gt; accounts = [SELECT Id, Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// select a list of records</span></p>
<p class=rvps12><span class=rvts125>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts124>FROM Account</span></p>
<p class=rvps12><span class=rvts124>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE Name = </span><span class=rvts128>'...'</span><span class=rvts124>];&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// or "Name = :myVariable"</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p class=rvps12><span class=rvts124>Account account = [SELECT ... LIMIT 1];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// returns only one record, not a list</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p class=rvps12><span class=rvts124>Map&lt;ID, Account&gt; map = </span><span class=rvts130>new </span><span class=rvts124>Map&lt;ID, Account&gt;(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// a query can also return a map</span></p>
<p class=rvps12><span class=rvts125>&nbsp;&nbsp;&nbsp; </span><span class=rvts124>[SELECT Id, Name FROM Account]</span></p>
<p class=rvps12><span class=rvts124>);</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p class=rvps12><span class=rvts130>for </span><span class=rvts124>(Account a : [SELECT Id FROM Account ...]) {&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// this allows the runtime to fetch data in batches, preventing</span></p>
<p class=rvps12><span class=rvts125>&nbsp;&nbsp;&nbsp; // code without DML statements</span></p>
<p class=rvps12><span class=rvts124>}</span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p class=rvps12><span class=rvts130>for </span><span class=rvts124>(List&lt;Account&gt; accounts : [SELECT ...]) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// like above, only submit one UPDATE for each batch</span></p>
<p class=rvps12><span class=rvts125>&nbsp;&nbsp;&nbsp; // manipulate accounts</span></p>
<p class=rvps12><span class=rvts125>&nbsp;&nbsp;&nbsp; </span><span class=rvts124>update accounts;</span></p>
<p class=rvps12><span class=rvts124>}</span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p class=rvps12><span class=rvts124>Database.query(</span><span class=rvts128>'SELECT Id FROM ...'</span><span class=rvts124>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// may use a (dynamic) string as the query</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection3'>Result structure</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>[SELECT ...][0]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// access the first result record</span></p>
<p class=rvps12><span class=rvts124>[SELECT ...][2].Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// access a field</span></p>
<p class=rvps12><span class=rvts124>[SELECT ... LIMIT 1].Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// no index is required if only one record is returned</span></p>
<p class=rvps12><span class=rvts124>[SELECT COUNT()...]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// count() returns an integer (not wrapped into a record)</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection4'>Nesting</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>Contact contact = </span><span class=rvts130>new </span><span class=rvts124>Contact(Account = [</span></p>
<p class=rvps12><span class=rvts124>&nbsp;&nbsp;&nbsp; SELECT Name FROM Account ... LIMIT 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// queries can be inlined</span></p>
<p class=rvps12><span class=rvts124>]);</span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p class=rvps12><span class=rvts124>[SELECT Id, Name, (SELECT Name FROM Contacts)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// embed queries for child elements (returns result.Contacts as array)</span></p>
<p class=rvps12><span class=rvts125>&nbsp;&nbsp; </span><span class=rvts124>FROM Account&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// migt also work as "SELECT Id, Name, Contacts.Name"</span></p>
<p class=rvps12><span class=rvts124>&nbsp; WHERE Name = </span><span class=rvts128>'Acme'</span><span class=rvts124>]</span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p class=rvps12><span class=rvts124>Integer i = [SELECT COUNT() FROM Accounts ...];</span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p class=rvps12><span class=rvts124>[SELECT Account.Name FROM Contact WHERE Id=:c.Id];&nbsp; </span><span class=rvts125>// can select properties from related objects</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection5'>GROUP BY</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>aggregateResult[] groupedResults = [</span></p>
<p class=rvps12><span class=rvts124>&nbsp;&nbsp;&nbsp; SELECT CampaignId, AVG(Amount)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// use aggregator functions</span></p>
<p class=rvps12><span class=rvts125>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts124>FROM Opportunity</span></p>
<p class=rvps12><span class=rvts124>&nbsp; GROUP BY CampaignId&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// group results</span></p>
<p class=rvps12><span class=rvts124>];</span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p class=rvps12><span class=rvts130>for </span><span class=rvts124>(AggregateResult ar : groupedResults)&nbsp; {</span></p>
<p class=rvps12><span class=rvts124>&nbsp;&nbsp;&nbsp; System.debug(ar.get(</span><span class=rvts128>'CampaignId'</span><span class=rvts124>));</span></p>
<p class=rvps12><span class=rvts124>&nbsp;&nbsp;&nbsp; System.debug(ar.get(</span><span class=rvts128>'expr0'</span><span class=rvts124>));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// or set an alias to AVG in the above statement</span></p>
<p class=rvps12><span class=rvts124>}</span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection6'>Other</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>SELECT ... LIMIT 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// return only the first n records</span></p>
<p class=rvps12><span class=rvts124>SELECT ... ALL ROWS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// query deleted and archived records as well</span></p>
<p><span class=rvts124>SELECT ... FOR UPDATE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// lock the record for exclusive write access</span></p>
<p><span class=rvts8><br></span></p>
<p><br></p>
<p><br></p>

