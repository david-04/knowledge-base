
<div id='nodeSection1'>Exceptions</div>
<p><span class=rvts12><br></span></p>
<p class=rvps12><span class=rvts262>???&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// shortcut for "throw new scala.NotImplementedError()"</span></p>
<p class=rvps12><span class=rvts263><br></span></p>
<p class=rvps11><span class=rvts268><br></span></p>
<p><span class=rvts268><br></span></p>
<p class=rvps12><span class=rvts263><br></span></p>
<p class=rvps12><span class=rvts265>try </span><span class=rvts262>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// the whole try-throw-catch-finally works like in Java</span></p>
<p class=rvps12><span class=rvts262>&nbsp; </span><span class=rvts265>throw new </span><span class=rvts262>RuntimeException(</span><span class=rvts266>"Error!"</span><span class=rvts262>)</span></p>
<p class=rvps12><span class=rvts262>} </span><span class=rvts265>catch </span><span class=rvts262>{</span></p>
<p class=rvps12><span class=rvts262>&nbsp; </span><span class=rvts265>case </span><span class=rvts262>ex: </span><span class=rvts277>RuntimeException </span><span class=rvts262>=&gt; println(ex)&nbsp; </span><span class=rvts263>// no break required for the case statement</span></p>
<p class=rvps12><span class=rvts263>&nbsp; </span><span class=rvts265>case </span><span class=rvts262>ex: </span><span class=rvts277>Exception </span><span class=rvts262>=&gt; println(ex)</span></p>
<p class=rvps12><span class=rvts262>} </span><span class=rvts265>finally </span><span class=rvts262>{</span></p>
<p class=rvps12><span class=rvts263>&nbsp; </span><span class=rvts262>println(</span><span class=rvts266>"Completed try-block"</span><span class=rvts262>)</span></p>
<p class=rvps12><span class=rvts262>}</span></p>
<p class=rvps12><span class=rvts262><br></span></p>
<p class=rvps11><span class=rvts268><br></span></p>
<p><span class=rvts268><br></span></p>
<p><span class=rvts262><br></span></p>
<p class=rvps12><span class=rvts265>val </span><span class=rvts262>y = </span><span class=rvts265>try </span><span class=rvts262>10 / 0 </span><span class=rvts265>catch </span><span class=rvts262>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// try blocks can return values</span></p>
<p class=rvps12><span class=rvts263>&nbsp; </span><span class=rvts265>case </span><span class=rvts262>(</span><span class=rvts282>ex</span><span class=rvts262>: </span><span class=rvts274>ArithmeticException</span><span class=rvts262>) =&gt; 0</span></p>
<p class=rvps12><span class=rvts262>}</span></p>
<p class=rvps12><span class=rvts262><br></span></p>
<p class=rvps11><span class=rvts268><br></span></p>
<p><span class=rvts268><br></span></p>
<p class=rvps12><span class=rvts262><br></span></p>
<p class=rvps12><span class=rvts265>def </span><span class=rvts262>myFunction(): Int = {</span></p>
<p class=rvps12><span class=rvts262>&nbsp; </span><span class=rvts265>try </span><span class=rvts262>{ </span><span class=rvts265>return </span><span class=rvts262>1 } </span><span class=rvts265>finally </span><span class=rvts262>{ </span><span class=rvts265>return </span><span class=rvts262>2 }&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// returns 2 because "finally" has an explicit "return" statement</span></p>
<p class=rvps12><span class=rvts262>&nbsp; </span><span class=rvts265>try </span><span class=rvts262>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 } </span><span class=rvts265>finally </span><span class=rvts262>{ </span><span class=rvts265>return </span><span class=rvts262>2 }&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// returns 2 because "finally" has an explicit "return" statement</span></p>
<p class=rvps12><span class=rvts262>&nbsp; </span><span class=rvts265>try </span><span class=rvts262>{ </span><span class=rvts265>return </span><span class=rvts262>1 } </span><span class=rvts265>finally </span><span class=rvts262>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts282>2 </span><span class=rvts262>}&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// returns 1 because "finally" has no explicit "return" statement</span></p>
<p class=rvps12><span class=rvts262>&nbsp; </span><span class=rvts265>try </span><span class=rvts262>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 } </span><span class=rvts265>finally </span><span class=rvts262>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts282>2 </span><span class=rvts262>}&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// returns 1 because "finally" has no explicit "return" statement</span></p>
<p class=rvps12><span class=rvts262>}</span></p>
<p class=rvps12><span class=rvts262><br></span></p>
<p><br></p>
<p><br></p>

