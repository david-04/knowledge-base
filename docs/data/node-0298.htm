
<div id='nodeSection1'>Explicit casts</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts110>Tenant</span><span class=rvts183> tenant = (</span><span class=rvts110>Tenant</span><span class=rvts183>) person;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// explicit cast, might throw an InvalidCastException</span></p>
<p><span class=rvts110>Tenant</span><span class=rvts183> tenant = person </span><span class=rvts58>as</span><span class=rvts183> </span><span class=rvts110>Tenant</span><span class=rvts183>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// returns jsut null (without exception) if object can't be cast</span></p>
<p><span class=rvts58>if</span><span class=rvts183> (person </span><span class=rvts58>is</span><span class=rvts183> </span><span class=rvts110>Tenant</span><span class=rvts183>)&nbsp;&nbsp;&nbsp; </span><span class=rvts183> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts183> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// check if an object is of the given type</span></p>
<p><span class=rvts176><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection2'>Overloading the cast operator</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>public</span><span class=rvts183> </span><span class=rvts58>class</span><span class=rvts183> </span><span class=rvts110>MyNumber</span></p>
<p><span class=rvts183>{</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>public</span><span class=rvts183> </span><span class=rvts58>static</span><span class=rvts183> </span><span class=rvts191>explicit</span><span class=rvts183> </span><span class=rvts58>operator</span><span class=rvts183> </span><span class=rvts110>MyNumber</span><span class=rvts183>(</span><span class=rvts110>MyCurrency</span><span class=rvts183> c)&nbsp; </span><span class=rvts176>// allows explicit cast MyCurrency -&gt; MyNumber</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; {</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>return</span><span class=rvts183> </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts110>MyNumber</span><span class=rvts183>();</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; }</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>public</span><span class=rvts183> </span><span class=rvts58>static</span><span class=rvts183> </span><span class=rvts191>implicit</span><span class=rvts183> </span><span class=rvts58>operator</span><span class=rvts183> </span><span class=rvts110>MyCurrency</span><span class=rvts183>(</span><span class=rvts110>MyNumber</span><span class=rvts183> n)&nbsp; </span><span class=rvts176>// allows implicit </span><span class=rvts187>and</span><span class=rvts176> explicit cast MyNumber -&gt; MyCurrency</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>return</span><span class=rvts183> </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts110>MyCurrency</span><span class=rvts183>();</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; }</span></p>
<p><span class=rvts183>}</span></p>
<p><span class=rvts183><br></span></p>
<p><br></p>
<p><br></p>

