
<div id='nodeSection1'>Implementing a ModelView</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>Class</span><span class=rvts183> </span><span class=rvts110>Person</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' business model to be wrapped</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Public</span><span class=rvts183> </span><span class=rvts58>Property</span><span class=rvts183> Name </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts58>String</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Public</span><span class=rvts183> </span><span class=rvts58>Property</span><span class=rvts183> Age </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts58>Integer</span></p>
<p><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>Class</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts58>Class</span><span class=rvts183> </span><span class=rvts110>MyViewModel</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Implements</span><span class=rvts183> </span><span class=rvts110>INotifyPropertyChanged</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' implement INotifyPropertyChanged to synchronise the GUI in real-time</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Private</span><span class=rvts183> </span><span class=rvts58>Property</span><span class=rvts183> _person </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts110>Person</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' use an explicit private field</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Public</span><span class=rvts183> </span><span class=rvts58>Property</span><span class=rvts183> Person </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts110>Person</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' implement accessors manually</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Get</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Return</span><span class=rvts183> </span><span class=rvts58>Me</span><span class=rvts183>._person</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>Get</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Set</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>If</span><span class=rvts183> </span><span class=rvts58>Not</span><span class=rvts183> </span><span class=rvts58>Me</span><span class=rvts183>._person.Equals(Value) </span><span class=rvts58>Then</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Me</span><span class=rvts183>._person = Value</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OnPropertyChanged()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' send a refresh request to the binding manager</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>If</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>Set</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>Property</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Public</span><span class=rvts183> </span><span class=rvts58>Event</span><span class=rvts183> PropertyChanged </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts110>PropertyChangedEventHandler</span><span class=rvts183> _</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Implements</span><span class=rvts183> </span><span class=rvts110>INotifyPropertyChanged</span><span class=rvts183>.PropertyChanged&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' Event required by INotifyPropertyChanged</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Private</span><span class=rvts183> </span><span class=rvts58>Sub</span><span class=rvts183> OnPropertyChanged(</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span class=rvts110>CallerMemberName</span><span class=rvts183>&gt; </span><span class=rvts58>Optional</span><span class=rvts183> propertyName </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts58>String</span><span class=rvts183> = </span><span class=rvts58>Nothing</span><span class=rvts183>)</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>RaiseEvent</span><span class=rvts183> PropertyChanged(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' the binding manager updates all properties recursively</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Me</span><span class=rvts183>, </span><span class=rvts58>New</span><span class=rvts183> </span><span class=rvts110>PropertyChangedEventArgs</span><span class=rvts183>(propertyName)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' (Person.Name, Person.Age) but does not update collections</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>Sub</span></p>
<p><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>Class</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts58>Class</span><span class=rvts183> </span><span class=rvts110>MainWindow</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Property</span><span class=rvts183> myViewModel </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts58>New</span><span class=rvts183> </span><span class=rvts110>MyViewModel</span><span class=rvts183>()</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection2'>Establishing the binding</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>&lt;</span><span class=rvts184>Window</span><span class=rvts185> x</span><span class=rvts58>:</span><span class=rvts185>Name</span><span class=rvts58>="MyWindow" </span><span class=rvts196>...</span><span class=rvts58>&gt;</span></p>
<p><span class=rvts58>&nbsp; &lt;</span><span class=rvts184>StackPanel</span><span class=rvts185> DataContext</span><span class=rvts58>="{</span><span class=rvts184>Binding</span><span class=rvts185> ElementName</span><span class=rvts58>=MyWindow,</span><span class=rvts185> Path</span><span class=rvts58>=_MyViewModel}"&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>&lt;!-- set the DataContext for the children&nbsp;&nbsp; --&gt;</span></p>
<p><span class=rvts58>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span class=rvts184>TextBox</span><span class=rvts185> Text</span><span class=rvts58>="{</span><span class=rvts184>Binding</span><span class=rvts185> Path</span><span class=rvts58>=Person.Name}"/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>&lt;!-- bind against the inherited DataContext --&gt;</span></p>
<p><span class=rvts58>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span class=rvts184>TextBox</span><span class=rvts185> Text</span><span class=rvts58>="{</span><span class=rvts184>Binding</span><span class=rvts185> ElementName</span><span class=rvts58>=MyWindow,</span><span class=rvts185> Path</span><span class=rvts58>=_MyViewModel.Person.Age}"/&gt;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>&lt;!-- bind against a separate DataContext&nbsp;&nbsp;&nbsp; --&gt;</span></p>
<p><span class=rvts58><br></span></p>
<p><span class=rvts8>Binding configuration:</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts185>Mode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>= OneWay&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>&lt;!-- uni- or bidrectional synchronisation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;</span></p>
<p><span class=rvts185>ValidatesOnExceptions </span><span class=rvts58>= True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>&lt;!-- mark red if writing back data raised an exception&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;</span></p>
<p><span class=rvts185>UpdateSourceTrigger&nbsp;&nbsp; </span><span class=rvts58>= PropertyChanged&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>&lt;!-- write data back as soon as it changes (not only on focus loss)&nbsp; --&gt;</span></p>
<p><span class=rvts58><br></span></p>
<p><span class=rvts8>Manually set the DataConext and bind the ViewModel:</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>Me</span><span class=rvts183>.DataContext = </span><span class=rvts58>Me</span><span class=rvts183>.MyViewModel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' set the data context for the whole window</span></p>
<p><span class=rvts58>Dim</span><span class=rvts183> binding </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts58>New</span><span class=rvts183> </span><span class=rvts110>Binding</span><span class=rvts183>()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' create a custom binding for one control</span></p>
<p><span class=rvts183>binding.Converter = </span><span class=rvts58>New</span><span class=rvts183> MyDoubleToIntConverter()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' optionally add a data converter</span></p>
<p><span class=rvts183>binding.Source = </span><span class=rvts58>Me</span><span class=rvts183>.MyViewModel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' add a source if the data context is not enough</span></p>
<p><span class=rvts183>binding.Path = </span><span class=rvts58>New</span><span class=rvts183> </span><span class=rvts110>PropertyPath</span><span class=rvts183>(</span><span class=rvts184>"Person.Name"</span><span class=rvts183>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' the (nested) property to bind to</span></p>
<p><span class=rvts58>Me</span><span class=rvts183>.MyTextBox.SetBinding(</span><span class=rvts110>Label</span><span class=rvts183>.ContentProperty, binding)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' add the binding to the control</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection3'>Observable collections</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts8>Use the following predefined .NET collection:</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts110>ObservableCollection</span><span class=rvts183>(</span><span class=rvts58>Of</span><span class=rvts183> </span><span class=rvts110>T</span><span class=rvts183>)</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts8>Or implemente an observable collection manually:</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>Public</span><span class=rvts183> </span><span class=rvts58>Class</span><span class=rvts183> </span><span class=rvts110>MyObservableOrderList</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Implements</span><span class=rvts183> </span><span class=rvts110>IEnumerable</span><span class=rvts183>(</span><span class=rvts58>Of</span><span class=rvts183> </span><span class=rvts110>Order</span><span class=rvts183>),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' implement some kind of list interface</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts110>INotifyCollectionChanged</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' implement the change notification</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Public</span><span class=rvts183> </span><span class=rvts58>Sub</span><span class=rvts183> insertOrder(order </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts110>Order</span><span class=rvts183>, index </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts58>Integer</span><span class=rvts183>)&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' Reset =&gt; None</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Me</span><span class=rvts183>.orders.Insert(index, order)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' Add (single) =&gt; tem to be added, [optional] index of location for add</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Me</span><span class=rvts183>.OnCollectionChanged(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' Add (List) Items to be added, [optional] index of location for add</span></p>
<p><span class=rvts58>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; New</span><span class=rvts183> </span><span class=rvts110>NotifyCollectionChangedEventArgs</span><span class=rvts183>(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' Remove(single) Item to be removed, [optional] index of item to be removed</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts110>NotifyCollectionChangedAction</span><span class=rvts183>.Add, order, index </span><span class=rvts176>' Remove(List) Items to be removed, [optional] start index of location for removal</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' Move(Single) Item to be moved, original index, destination index</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>Sub</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' Move(List) Items to be moved, start original index, destination index</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' implement the other required list methods and </span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts176>' override the indexer ([] operator) as well ...</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Public</span><span class=rvts183> </span><span class=rvts58>Event</span><span class=rvts183> CollectionChanged </span><span class=rvts58>As</span><span class=rvts183> _</span></p>
<p><span class=rvts110>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NotifyCollectionChangedEventHandler</span><span class=rvts183> _</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Implements</span><span class=rvts183> </span><span class=rvts110>INotifyCollectionChanged</span><span class=rvts183>.CollectionChanged&nbsp;&nbsp; </span><span class=rvts176>' the delegate to notify the binding manager</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>Private</span><span class=rvts183> </span><span class=rvts58>Sub</span><span class=rvts183> OnCollectionChanged(</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; args </span><span class=rvts58>As</span><span class=rvts183> </span><span class=rvts110>NotifyCollectionChangedEventArgs</span><span class=rvts183>)</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts58>RaiseEvent</span><span class=rvts183> CollectionChanged(</span><span class=rvts58>Me</span><span class=rvts183>, args)</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>Sub</span></p>
<p><span class=rvts58>End</span><span class=rvts183> </span><span class=rvts58>Class</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts8>Bind the collection either in XAML or via code:</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>&lt;</span><span class=rvts184>DataGrid</span><span class=rvts185> ItemsSource</span><span class=rvts58>="{</span><span class=rvts184>Binding</span><span class=rvts185> Path</span><span class=rvts58>=_MyViewModel.MyObservableOrderList}"/&gt;</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>Me</span><span class=rvts183>.myDataGrid.ItemsSource = </span><span class=rvts58>Me</span><span class=rvts183>.myViewModel.MyObservableOrderList</span></p>
<p><span class=rvts8><br></span></p>
<p><br></p>
<p><br></p>

