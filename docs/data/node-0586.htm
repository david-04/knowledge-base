
<div id='nodeSection1'>Extension methods</div>
<p><span class=rvts269><br></span></p>
<p class=rvps12><span class=rvts265>object </span><span class=rvts274>MyExtensions </span><span class=rvts262>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// put extensions into a singleton object</span></p>
<p class=rvps12><span class=rvts263>&nbsp; </span><span class=rvts265>implicit class </span><span class=rvts274>MyIntExt</span><span class=rvts262>(</span><span class=rvts265>val </span><span class=rvts262>x: Int)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// create an implicit class for the target type </span></p>
<p class=rvps12><span class=rvts263>&nbsp;&nbsp;&nbsp; </span><span class=rvts265>extends </span><span class=rvts262>AnyVal {</span></p>
<p class=rvps12><span class=rvts262>&nbsp;&nbsp;&nbsp; </span><span class=rvts265>def </span><span class=rvts262>length = </span><span class=rvts266>s"</span><span class=rvts276>$</span><span class=rvts262>x</span><span class=rvts266>"</span><span class=rvts262>.length&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// override/add methods as required</span></p>
<p class=rvps12><span class=rvts263>&nbsp; </span><span class=rvts262>}</span></p>
<p class=rvps12><span class=rvts262>}</span></p>
<p class=rvps12><span class=rvts262><br></span></p>
<p class=rvps12><span class=rvts265>import </span><span class=rvts274>MyExtensions</span><span class=rvts262>._&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// import the extensions</span></p>
<p class=rvps12><span class=rvts263><br></span></p>
<p class=rvps12><span class=rvts262>12.length&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// the extension methods can now be accessed </span></p>
<p class=rvps12><span class=rvts263><br></span></p>
<p class=rvps11><span class=rvts268><br></span></p>
<p><span class=rvts268><br></span></p>
<p><span class=rvts263><br></span></p>
<p class=rvps12><span class=rvts265>object </span><span class=rvts274>MyExtensions </span><span class=rvts262>{</span></p>
<p class=rvps12><span class=rvts262>&nbsp; </span><span class=rvts265>implicit class </span><span class=rvts274>MyListEx</span><span class=rvts262>[</span><span class=rvts277>T</span><span class=rvts262>](</span><span class=rvts265>val </span><span class=rvts262>x: </span><span class=rvts277>List</span><span class=rvts262>[</span><span class=rvts277>T</span><span class=rvts262>])</span><span class=rvts263>// can target generic types</span></p>
<p class=rvps12><span class=rvts263>&nbsp;&nbsp;&nbsp; </span><span class=rvts265>extends </span><span class=rvts262>AnyVal {</span></p>
<p class=rvps12><span class=rvts262>&nbsp;&nbsp;&nbsp; </span><span class=rvts265>def </span><span class=rvts262>findAny: </span><span class=rvts274>Option</span><span class=rvts262>[</span><span class=rvts277>T</span><span class=rvts262>] = x.headOption</span></p>
<p class=rvps12><span class=rvts262>&nbsp; }</span></p>
<p class=rvps12><span class=rvts262>}</span></p>
<p class=rvps12><span class=rvts262><br></span></p>
<p class=rvps12><span class=rvts265>import </span><span class=rvts274>MyExtensions</span><span class=rvts262>._&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// import the extensions</span></p>
<p class=rvps12><span class=rvts263><br></span></p>
<p class=rvps12><span class=rvts275>List</span><span class=rvts262>(1,2,3).findAny&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// returns the correct type (Option[Int])</span></p>
<p class=rvps12><span class=rvts263><br></span></p>
<p class=rvps12><span class=rvts263><br></span></p>
<p class=rvps11><span class=rvts268><br></span></p>
<p><span class=rvts268><br></span></p>
<p class=rvps12><span class=rvts263><br></span></p>
<p class=rvps12><span class=rvts265>extension</span><span class=rvts262> (x: Int)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts263>// simplified Scala 3 syntax</span></p>
<p class=rvps12><span class=rvts262>&nbsp; </span><span class=rvts265>def </span><span class=rvts262>length = </span><span class=rvts266>s"</span><span class=rvts276>$</span><span class=rvts262>x</span><span class=rvts266>"</span><span class=rvts262>.length</span></p>
<p class=rvps12><span class=rvts262><br></span></p>
<p class=rvps12><span class=rvts265>extension</span><span class=rvts262> [T](x: </span><span class=rvts277>List</span><span class=rvts262>[T])</span></p>
<p class=rvps12><span class=rvts262>&nbsp; </span><span class=rvts265>def </span><span class=rvts262>findAny: </span><span class=rvts274>Option</span><span class=rvts262>[T] = x.headOption</span></p>
<p class=rvps12><span class=rvts262><br></span></p>
<p><br></p>
<p><br></p>

