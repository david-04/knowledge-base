
<div id='nodeSection1'>Visibility</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>public</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// visible everywhere</span></p>
<p><span class=rvts58>private</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// only visible in the class itself</span></p>
<p><span class=rvts58>protected</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// like private but also visible in derived classes</span></p>
<p><span class=rvts58>internal</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// public in the current assembly but private outside</span></p>
<p><span class=rvts58>protected</span><span class=rvts183> </span><span class=rvts58>internal</span><span class=rvts183>&nbsp; </span><span class=rvts176>// protected in the current assembly but private outside</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection2'>Constants</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>const</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// must be initialised where declared</span></p>
<p><span class=rvts58>readonly</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// can be initialised in constructor</span></p>
<p><span class=rvts176><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection3'>Overloading</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>virtual</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// method may be overridden by derived classes</span></p>
<p><span class=rvts58>override</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// method replaces the parent's implementation</span></p>
<p><span class=rvts58>override sealed</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// overrides virtual methods but can't be overridden by descendants</span></p>
<p><span class=rvts58>new</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// shadow same-named members of the base class</span></p>
<p><span class=rvts58><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection4'>Other</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>static</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// applicable to constructors as well</span></p>
<p><span class=rvts58>partial</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// class is spread accross multiple source files</span></p>
<p><span class=rvts58>abstract</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// applicable to classes and members</span></p>
<p><span class=rvts58>sealed</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// prohibit inheritance (used for utility classes)</span></p>
<p><span class=rvts58><br></span></p>
<p><br></p>
<p><br></p>

