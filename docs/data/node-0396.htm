
<div id='nodeSection1'>Hibernate</div>
<p><span class=rvts12><br></span></p>
<p><span class=rvts233>SessionFactory</span><span class=rvts113> sessionFactory =&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// create a session factory (do this only once); it loads and parses</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts64>new</span><span class=rvts113> </span><span class=rvts233>Configuration</span><span class=rvts113>().configure()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// hibernate.cfg.xml from the root classpath and follows all links</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .buildSessionFactory();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// to the entity-mapping files</span></p>
<p><span class=rvts233><br></span></p>
<p><span class=rvts233>Session</span><span class=rvts113> session = sessionFactory.openSession();&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// obtain sessions frequently and release them as soon as possible</span></p>
<p><span class=rvts233>Transaction</span><span class=rvts113> tx = session.beginTransaction();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// optionally: wrap everything in a transaction</span></p>
<p><span class=rvts12><br></span></p>
<p><span class=rvts233>List</span><span class=rvts113>&lt;</span><span class=rvts233>Customer</span><span class=rvts113>&gt; customers = session.createQuery(&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// query the database&nbsp; </span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts217>"FROM myPackage.Customer"</span><span class=rvts113>).list();</span></p>
<p><span class=rvts233>Iterator</span><span class=rvts113>&lt;</span><span class=rvts233>Customer</span><span class=rvts113>&gt; iterator = customers.iterator(); </span><span class=rvts62>// obtain a result iterator</span></p>
<p><span class=rvts64>while</span><span class=rvts113> (iterator.hasNext()) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// loop over all retrieved records</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp; </span><span class=rvts233>Customer</span><span class=rvts113> customer = (</span><span class=rvts233>Customer</span><span class=rvts113>) iterator.next(); </span><span class=rvts62>// cast the result</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp; </span><span class=rvts233>System</span><span class=rvts113>.out.println(customer.getFirstName());&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// access the data like regular properties</span></p>
<p><span class=rvts113>}</span></p>
<p><span class=rvts12><br></span></p>
<p><span class=rvts113>tx.commit();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// commit (or rollback) the transaction</span></p>
<p><span class=rvts113>session.close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// close the session</span></p>
<p><span class=rvts62><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection2'>SELECT</div>
<p><span class=rvts12><br></span></p>
<p><span class=rvts233>Customer</span><span class=rvts113> customer = (</span><span class=rvts233>Customer</span><span class=rvts113>) session.get(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// retrieve a single record by its primary key</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts233>Customer</span><span class=rvts113>.</span><span class=rvts64>class</span><span class=rvts113>, 125);</span></p>
<p><span class=rvts61><br></span></p>
<p class=rvps11><span class=rvts111><br></span></p>
<p><span class=rvts111><br></span></p>
<p><span class=rvts61><br></span></p>
<p><span class=rvts233>List</span><span class=rvts113>&lt;</span><span class=rvts233>Customer</span><span class=rvts113>&gt; customers = session.createQuery(&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// retrieve all records from a selected table&nbsp; </span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts217>"FROM myPackage.Customer"</span><span class=rvts113>).list();</span></p>
<p><span class=rvts113><br></span></p>
<p class=rvps11><span class=rvts111><br></span></p>
<p><span class=rvts111><br></span></p>
<p><span class=rvts113><br></span></p>
<p><span class=rvts233>Query</span><span class=rvts113>&lt;</span><span class=rvts233>Customer</span><span class=rvts113>&gt; query = session.createQuery(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// retrieve selected records with named-parameter queries</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts217>"FROM myPackage.Customer C "</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp; + </span><span class=rvts217>"WHERE C.id = :customerId"</span></p>
<p><span class=rvts113>);</span></p>
<p><span class=rvts113>query.setParameter(</span><span class=rvts217>"customerId"</span><span class=rvts113>, 125);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// set the current parameter values</span></p>
<p><span class=rvts113>query.setFirstResult(1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// pagination (select only a limited range from the whole result set)</span></p>
<p><span class=rvts113>query.setMaxResults(10);</span></p>
<p><span class=rvts233>List</span><span class=rvts113>&lt;</span><span class=rvts233>Customer</span><span class=rvts113>&gt; results = query.list();</span></p>
<p><span class=rvts113><br></span></p>
<p class=rvps11><span class=rvts111><br></span></p>
<p><span class=rvts111><br></span></p>
<p><span class=rvts12><br></span></p>
<p><span class=rvts217>FROM myPackage.Customer</span><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// HQL - Hibernate Query Language</span></p>
<p><span class=rvts61><br></span></p>
<p><span class=rvts217>SELECT C.firstName, C.lastName</span><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// optional: projection</span></p>
<p><span class=rvts217>FROM myPackage.Customer AS C&nbsp;</span><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// the entity to query</span></p>
<p><span class=rvts217>WHERE C.lastName = 'Smith'</span><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// optional: filtering</span></p>
<p><span class=rvts217>ORDER BY C.id DESC</span><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// optional: sorting</span></p>
<p><span class=rvts217>GROUP BY C.firstName&nbsp;</span><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// optional: grouping</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts217>avg()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// aggregator functions, can be combined with distinct, for example:</span></p>
<p><span class=rvts217>count()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// SELECT count(distinct E.firstName) FROM Employee E</span></p>
<p><span class=rvts217>min()</span></p>
<p><span class=rvts217>max()</span></p>
<p><span class=rvts217>sum()</span></p>
<p><span class=rvts217><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection3'>SELECT (criteria query)</div>
<p><span class=rvts12><br></span></p>
<p><span class=rvts45>&lt;?</span><span class=rvts42>xml</span><span class=rvts45> </span><span class=rvts90>version</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>1.0</span><span class=rvts41>"</span><span class=rvts45> </span><span class=rvts90>encoding</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>UTF-8</span><span class=rvts41>"</span><span class=rvts45>?&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts39>&lt;-- must be saved as: META-INF/persistence.xml --&gt;</span></p>
<p><span class=rvts39><br></span></p>
<p><span class=rvts45>&lt;</span><span class=rvts42>persistence</span><span class=rvts45> </span><span class=rvts90>xmlns</span><span class=rvts45>=</span><span class=rvts41>"</span><a class=rvts51 href="http://java.sun.com/xml/ns/persistence">http://java.sun.com/xml/ns/persistence</a><span class=rvts41>"</span></p>
<p><span class=rvts45> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts90>xmlns:xsi</span><span class=rvts45>=</span><span class=rvts41>"</span><a class=rvts51 href="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</a><span class=rvts41>"</span></p>
<p><span class=rvts45> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts90>xsi:schemaLocation</span><span class=rvts45>=</span><span class=rvts41>"</span><a class=rvts51 href="http://java.sun.com/xml/ns/persistence">http://java.sun.com/xml/ns/persistence</a><span class=rvts45> </span><a class=rvts51 href="http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd</a><span class=rvts41>"</span></p>
<p><span class=rvts45> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts90>version</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>2.0</span><span class=rvts41>"</span><span class=rvts45>&gt;</span></p>
<p><span class=rvts45>&nbsp; &lt;</span><span class=rvts42>persistence-unit</span><span class=rvts45> </span><span class=rvts90>name</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>myPersistenceUnit</span><span class=rvts41>"</span><span class=rvts45>&gt;</span></p>
<p><span class=rvts45>&nbsp;&nbsp;&nbsp; &lt;</span><span class=rvts42>properties</span><span class=rvts45>&gt;</span></p>
<p><span class=rvts45>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span class=rvts42>property</span><span class=rvts45> </span><span class=rvts90>name</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>hibernate.dialect</span><span class=rvts41>"</span><span class=rvts45> </span><span class=rvts90>value</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>org.hibernate.dialect.MySQLDialect</span><span class=rvts41>"</span><span class=rvts45>/&gt;</span></p>
<p><span class=rvts45>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span class=rvts42>property</span><span class=rvts45> </span><span class=rvts90>name</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>hibernate.connection.driver_class</span><span class=rvts41>"</span><span class=rvts45> </span><span class=rvts90>value</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>com.mysql.jdbc.Driver</span><span class=rvts41>"</span><span class=rvts45>/&gt;</span></p>
<p><span class=rvts45>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span class=rvts42>property</span><span class=rvts45> </span><span class=rvts90>name</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>hibernate.connection.url</span><span class=rvts41>"</span><span class=rvts45> </span><span class=rvts90>value</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>jdbc:mysql://localhost/david</span><span class=rvts41>"</span><span class=rvts45>/&gt;</span></p>
<p><span class=rvts45>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span class=rvts42>property</span><span class=rvts45> </span><span class=rvts90>name</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>hibernate.connection.username</span><span class=rvts41>"</span><span class=rvts45> </span><span class=rvts90>value</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>david</span><span class=rvts41>"</span><span class=rvts45>/&gt;</span></p>
<p><span class=rvts45>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span class=rvts42>property</span><span class=rvts45> </span><span class=rvts90>name</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>hibernate.connection.password</span><span class=rvts41>"</span><span class=rvts45> </span><span class=rvts90>value</span><span class=rvts45>=</span><span class=rvts41>"</span><span class=rvts45>test123</span><span class=rvts41>"</span><span class=rvts45>/&gt;</span></p>
<p><span class=rvts45>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts39>&lt;!-- &lt;property name="hibernate.hbm2ddl.auto" value="create" /&gt;&nbsp; --&gt;</span></p>
<p><span class=rvts45>&nbsp;&nbsp;&nbsp; &lt;/</span><span class=rvts42>properties</span><span class=rvts45>&gt;</span></p>
<p><span class=rvts45>&nbsp; &lt;/</span><span class=rvts42>persistence-unit</span><span class=rvts45>&gt;</span></p>
<p><span class=rvts45>&lt;/</span><span class=rvts42>persistence</span><span class=rvts45>&gt;</span></p>
<p><span class=rvts45><br></span></p>
<p class=rvps11><span class=rvts111><br></span></p>
<p><span class=rvts111><br></span></p>
<p><span class=rvts45><br></span></p>
<p><span class=rvts233>EntityManagerFactory</span><span class=rvts113> emf = </span><span class=rvts233>Persistence</span><span class=rvts113>.createEntityManagerFactory(</span><span class=rvts217>"myPersistenceUnit"</span><span class=rvts113>);</span></p>
<p><span class=rvts233>EntityManager</span><span class=rvts113> em = emf.createEntityManager();</span></p>
<p><span class=rvts233>CriteriaBuilder</span><span class=rvts113> cb = em.getCriteriaBuilder();</span></p>
<p><span class=rvts233>CriteriaQuery</span><span class=rvts113>&lt;</span><span class=rvts233>Customer</span><span class=rvts113>&gt; cq = cb.createQuery(</span><span class=rvts233>Customer</span><span class=rvts113>.</span><span class=rvts64>class</span><span class=rvts113>);</span></p>
<p><span class=rvts233>Root</span><span class=rvts113>&lt;</span><span class=rvts233>Customer</span><span class=rvts113>&gt; root = cq.from(</span><span class=rvts233>Customer</span><span class=rvts113>.</span><span class=rvts64>class</span><span class=rvts113>);</span></p>
<p><span class=rvts113>cq.select(root);</span></p>
<p><span class=rvts113>cq.where( cb.equal( root.get(</span><span class=rvts217>"firstName"</span><span class=rvts113>), </span><span class=rvts217>"Patrick"</span><span class=rvts113> ) );</span></p>
<p><span class=rvts233>List</span><span class=rvts113>&lt;</span><span class=rvts233>Customer</span><span class=rvts113>&gt; customers = em.createQuery(cq).getResultList();</span></p>
<p><span class=rvts64>for</span><span class=rvts113> (</span><span class=rvts233>Customer</span><span class=rvts113> customer : customers) {</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp; </span><span class=rvts233>System</span><span class=rvts113>.out.println(customer.getLastName());</span></p>
<p><span class=rvts113>}</span></p>
<p><span class=rvts113>em.close();</span></p>
<p><span class=rvts113>emf.close();</span></p>
<p><span class=rvts113><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection4'>INSERT</div>
<p><span class=rvts12><br></span></p>
<p><span class=rvts233>Customer</span><span class=rvts113> customer = </span><span class=rvts64>new</span><span class=rvts113> </span><span class=rvts233>Customer</span><span class=rvts113>();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// create a POJO object to insert</span></p>
<p><span class=rvts113>customer.setMyProperty(</span><span class=rvts73>...</span><span class=rvts113>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// set all required properties</span></p>
<p><span class=rvts113>session.save(customer);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// save it to the database</span></p>
<p><span class=rvts9><br></span></p>
<p class=rvps11><span class=rvts111><br></span></p>
<p><span class=rvts111><br></span></p>
<p><span class=rvts9><br></span></p>
<p><span class=rvts233>Query</span><span class=rvts113>&lt;?&gt; query = session.createQuery(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// create the HQL statement</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts217>"INSERT INTO Customer(firstName, lastName) "</span><span class=rvts113>&nbsp; </span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp; + </span><span class=rvts217>"SELECT firstName, lastName "</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp; + </span><span class=rvts217>"FROM Prospects"</span></p>
<p><span class=rvts113>);</span></p>
<p><span class=rvts64>int</span><span class=rvts113> rowCount = query.executeUpdate();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// execute the statement (the number of affected rows is returned)</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection5'>UPDATE</div>
<p><span class=rvts12><br></span></p>
<p><span class=rvts233>Customer</span><span class=rvts113> customer = (</span><span class=rvts233>Customer</span><span class=rvts113>) session.get(</span><span class=rvts73>...</span><span class=rvts113>);&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// obtain the record to be update</span></p>
<p><span class=rvts113>customer.setFirstName(</span><span class=rvts217>"David"</span><span class=rvts113>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// manipulate the object as required</span></p>
<p><span class=rvts113>session.update(customer);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// save the changes</span></p>
<p><span class=rvts62><br></span></p>
<p class=rvps11><span class=rvts111><br></span></p>
<p><span class=rvts111><br></span></p>
<p><span class=rvts62><br></span></p>
<p><span class=rvts233>Query</span><span class=rvts113>&lt;?&gt; query = session.createQuery(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// create the HQL statement</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts217>"UPDATE Customer SET firstName = :firstName "</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp; + </span><span class=rvts217>"WHERE id = :customerId"</span></p>
<p><span class=rvts113>);</span></p>
<p><span class=rvts113>query.setParameter(</span><span class=rvts217>"firstName"</span><span class=rvts113>, </span><span class=rvts217>"Customer"</span><span class=rvts113>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// set the required parameters</span></p>
<p><span class=rvts113>query.setParameter(</span><span class=rvts217>"customerId"</span><span class=rvts113>, 30);</span></p>
<p><span class=rvts64>int</span><span class=rvts113> rowCount = query.executeUpdate();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// execute the statement (the number of affected rows is returned)</span></p>
<p><span class=rvts62><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection6'>DELETE</div>
<p><span class=rvts12><br></span></p>
<p><span class=rvts233>Customer</span><span class=rvts113> customer = (</span><span class=rvts233>Customer</span><span class=rvts113>) session.get(</span><span class=rvts73>...</span><span class=rvts113>);&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// obtain the record to be deleted</span></p>
<p><span class=rvts113>session.delete(customer);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// delete the record</span></p>
<p><span class=rvts62><br></span></p>
<p class=rvps11><span class=rvts111><br></span></p>
<p><span class=rvts111><br></span></p>
<p><span class=rvts62><br></span></p>
<p><span class=rvts233>Query</span><span class=rvts113>&lt;?&gt; query = session.createQuery(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// create the HQL statement</span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp; </span><span class=rvts217>"DELETE FROM Customer WHERE id = :customerId"</span></p>
<p><span class=rvts113>);</span></p>
<p><span class=rvts113>query.setParameter(</span><span class=rvts217>"customerId"</span><span class=rvts113>, 31);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// set the required parameters</span></p>
<p><span class=rvts64>int</span><span class=rvts113> rowCount = query.executeUpdate();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// execute the statement (the number of affected rows is returned)</span></p>
<p><span class=rvts62><br></span></p>
<p><br></p>
<p><br></p>

