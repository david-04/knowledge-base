
<div id='nodeSection1'>Arrays</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>int</span><span class=rvts183>[] array1 = </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts58>int</span><span class=rvts183>[3];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// one-dimensional</span></p>
<p><span class=rvts58>int</span><span class=rvts183>[] array2 = </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts58>int</span><span class=rvts183>[] { 1, 2, 3 };</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts58>string</span><span class=rvts183>[,] array3 = </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts58>string</span><span class=rvts183>[10, 20];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// two-dimensional static</span></p>
<p><span class=rvts183>array3[8, 15] = </span><span class=rvts184>"data"</span><span class=rvts183>;</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts58>string</span><span class=rvts183>[][] array4 = </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts58>string</span><span class=rvts183>[10][];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// two-dimensional dynamic</span></p>
<p><span class=rvts183>array4[5] = </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts58>string</span><span class=rvts183>[20];</span></p>
<p><span class=rvts183>array4[5][15] = </span><span class=rvts184>"data"</span><span class=rvts183>;</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection2'>Standard collections</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts183>System.</span><span class=rvts110>Array</span></p>
<p><span class=rvts183>System.Collections.</span><span class=rvts110>BitArray</span></p>
<p><span class=rvts183>System.Collections.</span><span class=rvts110>ArrayList</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>Dictionary&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// hash table</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>HashSet</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>LinkedList</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>List</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>Queue</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>SortedDictionary</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>SortedList</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>SortedSet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// self-balancing tree</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>Stack</span></p>
<p><span class=rvts183>System.Collections.Generic.</span><span class=rvts110>SynchronizedCollection</span></p>
<p><span class=rvts183>System.Collections.ObjectModel.</span><span class=rvts110>ObservableCollection</span></p>
<p><span class=rvts183>System.Collections.Specialized.</span><span class=rvts110>StringCollection</span></p>
<p><span class=rvts110><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection3'>Initialising collections</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts110>List</span><span class=rvts183>&lt;</span><span class=rvts58>int</span><span class=rvts183>&gt; listOfIntegers = </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts110>List</span><span class=rvts183>&lt;</span><span class=rvts58>int</span><span class=rvts183>&gt; { 1, 2, 3, 4};</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection4'>Converting untyped containers</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts110>ArrayList</span><span class=rvts183> list = </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts110>ArrayList</span><span class=rvts183>();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// contains untyped elements of type object</span></p>
<p><span class=rvts110>IEnumerable</span><span class=rvts183>&lt;</span><span class=rvts58>string</span><span class=rvts183>&gt; stringList = list.OfType&lt;</span><span class=rvts58>string</span><span class=rvts183>&gt;();&nbsp; </span><span class=rvts176>// convert to a typed enumerable (discards all non-string list items)</span></p>
<p><span class=rvts183><br></span></p>
<p><br></p>
<p><br></p>

