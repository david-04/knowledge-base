
<div id='nodeSection1'>Retrieve elements</div>
<p><span class=rvts12><br></span></p>
<p class=rvps12><span class=rvts124>.at(0)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// the </span><span class=rvts126>wrapper</span><span class=rvts125> at the given position</span></p>
<p class=rvps12><span class=rvts124>.first()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// the first wrapper</span></p>
<p class=rvps12><span class=rvts124>.last()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// the last wrapper</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p class=rvps12><span class=rvts124>.</span><span class=rvts127>get</span><span class=rvts124>(0)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// the </span><span class=rvts126>React element</span><span class=rvts125> at the given position</span></p>
<p class=rvps12><span class=rvts124>.getNodes()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// all React elements in the list elements (???)</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection2'>Checks</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>.</span><span class=rvts127>some</span><span class=rvts124>(selector)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// at least one list item matches the selector</span></p>
<p class=rvps12><span class=rvts124>.</span><span class=rvts127>every</span><span class=rvts124>(selector)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// all list items matches the selector</span></p>
<p class=rvps12><span class=rvts124>.someWhere(n =&gt; n.hasClass(</span><span class=rvts128>'myclass'</span><span class=rvts124>))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// the given function returns true for at least one if the list items</span></p>
<p class=rvps12><span class=rvts124>.everyWhere(n =&gt; n.hasClass(</span><span class=rvts128>'myclass'</span><span class=rvts124>))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// the given function returns true for all list items</span></p>
<p><span class=rvts9><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection3'>Filter</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>.filter(selector)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// all elements that match the given selector</span></p>
<p class=rvps12><span class=rvts124>.filterWhere(wrapper =&gt; wrapper.</span><span class=rvts127>text</span><span class=rvts124>() !== </span><span class=rvts128>'123'</span><span class=rvts124>)&nbsp;&nbsp; </span><span class=rvts125>// all elements for which the given function returns true</span></p>
<p class=rvps12><span class=rvts124>.not(selector)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// all elements that do not match the given selector</span></p>
<p class=rvps12><span class=rvts124>.hostNodes()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// all host nodes (that presumably includes all HTML nodes and excludes all React components)</span></p>
<p><span class=rvts8><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection4'>Slicing</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>.</span><span class=rvts127>slice</span><span class=rvts124>()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// clone the list</span></p>
<p class=rvps12><span class=rvts124>.</span><span class=rvts127>slice</span><span class=rvts124>(9)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// clone the list starting from the 10th element</span></p>
<p class=rvps12><span class=rvts124>.</span><span class=rvts127>slice</span><span class=rvts124>(9, 16)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// clone the list between the 10th and the 15th element</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection5'>Iterate</div>
<p><span class=rvts8><br></span></p>
<p class=rvps12><span class=rvts124>.foreach(wrapper =&gt; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// execute custom code for each list item (returns the input wrapper)</span></p>
<p class=rvps12><span class=rvts125>&nbsp;&nbsp;&nbsp; </span><span class=rvts124>expect(wrapper.hasClass(</span><span class=rvts128>'abc'</span><span class=rvts124>)).to.equal(</span><span class=rvts130>true</span><span class=rvts124>);</span></p>
<p class=rvps12><span class=rvts124>})</span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p class=rvps12><span class=rvts124>.</span><span class=rvts127>map</span><span class=rvts124>(wrapper =&gt; wrapper.text())&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// map all list items (returns an array with the mapped value)</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p class=rvps12><span class=rvts124>.</span><span class=rvts127>reduce</span><span class=rvts124>((sum, wrapper, index) =&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// reduce the list to a scalar value</span></p>
<p class=rvps12><span class=rvts124>&nbsp;&nbsp;&nbsp; amount + wrapper.prop(</span><span class=rvts128>'charge'</span><span class=rvts124>))&nbsp;&nbsp; </span></p>
<p class=rvps12><span class=rvts124>.</span><span class=rvts127>reduceRight</span><span class=rvts124>((sum, wrapper, index) =&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// like above but runs reverse from right to left</span></p>
<p class=rvps12><span class=rvts124>&nbsp;&nbsp;&nbsp; amount + wrapper.prop(</span><span class=rvts128>'charge'</span><span class=rvts124>))&nbsp;&nbsp; </span></p>
<p class=rvps12><span class=rvts124><br></span></p>
<p class=rvps12><span class=rvts124>.tap(n =&gt; console.</span><span class=rvts127>log</span><span class=rvts124>(n.</span><span class=rvts127>debug</span><span class=rvts124>()))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts125>// hook some code into a chain of list operations</span></p>
<p class=rvps12><span class=rvts125><br></span></p>
<p><br></p>
<p><br></p>

