
<div id='nodeSection1'>Reflections</div>
<p><span class=rvts233><br></span></p>
<p><span class=rvts233>Array</span></p>
<p><span class=rvts233>Executable</span><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// abstract base class for Method and Constructor</span></p>
<p><span class=rvts61>+-- </span><span class=rvts233>Constructor</span></p>
<p><span class=rvts61>+-- </span><span class=rvts233>Method</span></p>
<p><span class=rvts233>Field</span></p>
<p><span class=rvts233>Modifier</span></p>
<p><span class=rvts233>Paramter</span></p>
<p><span class=rvts233>Proxy</span><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// supports dynamic proxy classes</span></p>
<p><span class=rvts62><br></span></p>
<p class=rvps11><span class=rvts111><br></span></p>
<p><span class=rvts111><br></span></p>
<p><span class=rvts62><br></span></p>
<p><span class=rvts233>Class</span><span class=rvts113>&lt;?&gt; myClass = myObject.getClass();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// obtain the class descriptor of a pre-existing object</span></p>
<p><span class=rvts233>Method</span><span class=rvts113> myMethod = myClass.getMethod(</span><span class=rvts217>"myFunction"</span><span class=rvts113>,&nbsp;&nbsp; </span><span class=rvts62>// obtain a handle to a specific method </span></p>
<p><span class=rvts113>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts64>int</span><span class=rvts113>.</span><span class=rvts64>class</span><span class=rvts113>);</span></p>
<p><span class=rvts113>myMethod.invoke(myObject, 13);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>// invoke the method</span></p>
<p><span class=rvts62><br></span></p>
<p><br></p>
<p><br></p>

