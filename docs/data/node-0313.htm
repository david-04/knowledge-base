
<div id='nodeSection1'>Data types</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>sbyte</span><span class=rvts183>&nbsp;&nbsp; System.</span><span class=rvts110>SByte</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// -128 ... 127</span></p>
<p><span class=rvts58>byte</span><span class=rvts183>&nbsp;&nbsp;&nbsp; System.</span><span class=rvts110>Byte</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// 0 .. 255</span></p>
<p><span class=rvts58>short</span><span class=rvts183>&nbsp;&nbsp; System.</span><span class=rvts110>Int16</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// -32,768 ... 32,767</span></p>
<p><span class=rvts58>ushort</span><span class=rvts183>&nbsp; System.</span><span class=rvts110>UInt16</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// 0 ... 65,535</span></p>
<p><span class=rvts58>int</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp; System.</span><span class=rvts110>Int32</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// -2.147e9 ... 2.147e9</span></p>
<p><span class=rvts58>uint</span><span class=rvts183>&nbsp;&nbsp;&nbsp; System.</span><span class=rvts110>UInt32</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// 0 ... 4.294e9</span></p>
<p><span class=rvts58>long</span><span class=rvts183>&nbsp;&nbsp;&nbsp; System.</span><span class=rvts110>Int64</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// -9.223e18 .. 9.223e18</span></p>
<p><span class=rvts58>ulong</span><span class=rvts183>&nbsp;&nbsp; System.</span><span class=rvts110>UInt64</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// 0 ... 18.446e18</span></p>
<p><span class=rvts58>float</span><span class=rvts183>&nbsp;&nbsp; System.</span><span class=rvts110>Single</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// -3.4e38 ... 3.4e38</span></p>
<p><span class=rvts58>double</span><span class=rvts183>&nbsp; System.</span><span class=rvts110>Double</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// 5.0e-324 ... 1.7e308</span></p>
<p><span class=rvts58>decimal</span><span class=rvts183> System.</span><span class=rvts110>Decimal</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// (-7.9e28 ... 7.9e28) / 1e0...26</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts58>bool</span><span class=rvts183>&nbsp;&nbsp;&nbsp; System.</span><span class=rvts110>Boolean</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// true, false</span></p>
<p><span class=rvts58>char</span><span class=rvts183>&nbsp;&nbsp;&nbsp; System.</span><span class=rvts110>Char</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// U+0000 .... U+ffff (16 bit)</span></p>
<p><span class=rvts58>string</span><span class=rvts183>&nbsp; System.</span><span class=rvts110>String</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// unlimited length</span></p>
<p><span class=rvts58>object</span><span class=rvts183>&nbsp; System.</span><span class=rvts110>Object</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// any object</span></p>
<p><span class=rvts176><br></span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.</span><span class=rvts110>DateTime</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=rvts196>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// a timestamp without regards to time zones</span></p>
<p><span class=rvts176>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts183>System.</span><span class=rvts110>DateTimeOffset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// a timestamp bound to a particular time zone</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Numerics.</span><span class=rvts110>BigInteger&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span class=rvts176> signed integer with no upper or lower limits</span></p>
<p><span class=rvts183><br></span></p>
<p><span class=rvts58>var&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// type determined by compiler based on first assignment</span></p>
<p><span class=rvts58>dynamic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// no compile-time type checking at all</span></p>
<p><span class=rvts176><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection2'>Creating dynamic classes on the fly</div>
<p><span class=rvts45><br></span></p>
<p><span class=rvts45>dynamic</span><span class=rvts41> contact = </span><span class=rvts45>new</span><span class=rvts41> </span><span class=rvts171>ExpandoObject</span><span class=rvts41>();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts39>// create objects with dynamic properties</span></p>
<p><span class=rvts41>contact.Name = </span><span class=rvts42>"John Doe"</span><span class=rvts41>;</span></p>
<p><span class=rvts41>contact.Address = </span><span class=rvts45>new</span><span class=rvts41> </span><span class=rvts171>ExpandoObject</span><span class=rvts41>();</span></p>
<p><span class=rvts41>contact.Address.Street = </span><span class=rvts42>"123 Main St"</span><span class=rvts41>;</span></p>
<p><span class=rvts41>contact.Address.City = </span><span class=rvts42>"Anywhere"</span><span class=rvts41>;</span></p>
<p><span class=rvts176><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection3'>Dates</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts110>DateTime</span><span class=rvts183> now = </span><span class=rvts110>DateTime</span><span class=rvts183>.Now;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// get the current time</span></p>
<p><span class=rvts110><br></span></p>
<p><span class=rvts110>DateTime</span><span class=rvts183> past = </span><span class=rvts58>new</span><span class=rvts183> </span><span class=rvts110>DateTime</span><span class=rvts183>(2015, 12, 24);&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// set a predefined time</span></p>
<p><span class=rvts183>past = </span><span class=rvts58>Date</span><span class=rvts183>.Parse(</span><span class=rvts184>"2015/12/26 23:00:00"</span><span class=rvts183>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// alsow avalable as TryParse</span></p>
<p><span class=rvts110><br></span></p>
<p><span class=rvts110>Console</span><span class=rvts183>.WriteLine((now - past).Days);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// calculate time differences</span></p>
<p><span class=rvts110>Console</span><span class=rvts183>.WriteLine(now.ToString(</span><span class=rvts184>"yyyy/MM/dd"</span><span class=rvts183>)); </span><span class=rvts176>// format as specified</span></p>
<p><span class=rvts176><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection4'>Data type metadata</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts58>int</span><span class=rvts183>.MinValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// -2147483648</span></p>
<p><span class=rvts58>int</span><span class=rvts183>.MaxValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// 21474836</span></p>
<p><span class=rvts58>bool</span><span class=rvts183>.TrueString&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// True</span></p>
<p><span class=rvts58><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection5'>Handling overflows</div>
<p><span class=rvts8><br></span></p>
<p><span class=rvts183>myByte = (</span><span class=rvts58>byte</span><span class=rvts183>) myInt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// overflow remains undetected (like in C)</span></p>
<p><span class=rvts183>myByte = </span><span class=rvts58>checked</span><span class=rvts183>((</span><span class=rvts58>byte</span><span class=rvts183>) myInt);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// throws an OverflowException</span></p>
<p><span class=rvts176><br></span></p>
<p><span class=rvts58>checked</span></p>
<p><span class=rvts183>{</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>byte</span><span class=rvts183> myByte = (</span><span class=rvts58>byte</span><span class=rvts183>) myInt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// throws an OverflowException</span></p>
<p><span class=rvts183>}</span></p>
<p class=rvps2><span class=rvts7><br></span></p>
<p><span class=rvts58>unchecked</span></p>
<p><span class=rvts183>{</span></p>
<p><span class=rvts183>&nbsp;&nbsp;&nbsp; </span><span class=rvts58>byte</span><span class=rvts183> myByte = (</span><span class=rvts58>byte</span><span class=rvts183>) myInt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts176>// overflow remains undetectd even if check_all is set as a build option</span></p>
<p><span class=rvts183>}</span></p>
<p class=rvps2><span class=rvts7><br></span></p>
<p><br></p>
<p><br></p>

