
<div id='nodeSection1'>Numeric functions</div>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>ABS</span><span class=rvts63>(</span><span class=rvts61>n</span><span class=rvts63>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- absolute value</span></p>
<p><span class=rvts67>SIGN</span><span class=rvts63>(</span><span class=rvts61>n</span><span class=rvts63>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- sign</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>FLOOR</span><span class=rvts63>(</span><span class=rvts61>n</span><span class=rvts63>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- rounding towards zero</span></p>
<p><span class=rvts67>CEILING</span><span class=rvts63>(</span><span class=rvts61>n</span><span class=rvts63>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- rounding away from zero</span></p>
<p><span class=rvts67>ROUND</span><span class=rvts63>(</span><span class=rvts61>n</span><span class=rvts63>,</span><span class=rvts61>p</span><span class=rvts63>,</span><span class=rvts61>[t]</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- round n to p digits behind the decimal point (p negative =&gt; before the decimal point), t causes truncation</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>SQRT</span><span class=rvts63>(</span><span class=rvts61>n</span><span class=rvts63>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- square root</span></p>
<p><span class=rvts67>SQUARE</span><span class=rvts63>(</span><span class=rvts61>n</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- n</span><span class=rvts74>Â²</span></p>
<p><span class=rvts67>POWER</span><span class=rvts63>(</span><span class=rvts61>x</span><span class=rvts63>,</span><span class=rvts61>y</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- x^y</span></p>
<p><span class=rvts67>EXP|LOG|LOG10</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- e^n, ln, log</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>RAND</span><span class=rvts63>()</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- random number in the range [0, 1[</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>DEGREES</span><span class=rvts63>(</span><span class=rvts61>n</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- convert radians to degrees</span></p>
<p><span class=rvts67>RADIANS</span><span class=rvts63>(</span><span class=rvts61>n</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- convert degrees to radians</span></p>
<p><span class=rvts67>PI</span><span class=rvts63>()</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- PI</span></p>
<p><span class=rvts67>SIN</span><span class=rvts61>|</span><span class=rvts67>COS</span><span class=rvts61>|</span><span class=rvts67>TAN</span><span class=rvts61>|</span><span class=rvts67>ASIN</span><span class=rvts61>|</span><span class=rvts67>ACOS</span><span class=rvts61>|</span><span class=rvts67>ATAN</span><span class=rvts61>|</span><span class=rvts67>ATN2</span><span class=rvts61>|</span><span class=rvts67>COT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- trigoniometric functions</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>ROWCOUNT_BIG</span><span class=rvts63>()</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- number of records affected by a SQL statement</span></p>
<p><span class=rvts61><br></span></p>
<p><span class=rvts61><br></span></p>
<div id='nodeSection2'>Date and time functions</div>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>GETDATE</span><span class=rvts63>()</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- current system date</span></p>
<p><span class=rvts67>DATEPART</span><span class=rvts63>(</span><span class=rvts61>item</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>date</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- item can be for example month or weekday (not quoted as a string!), January=1, Monday=1, Sunday=7</span></p>
<p><span class=rvts67>DATENAME</span><span class=rvts63>(</span><span class=rvts61>item</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>date</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- like DATEPART, but returns weekday/month names rather than numbers</span></p>
<p><span class=rvts67>DATEDIFF</span><span class=rvts63>(</span><span class=rvts61>item</span><span class=rvts63>,</span><span class=rvts61> date1</span><span class=rvts63>,</span><span class=rvts61> date2</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- date2-date1, returned as FLOORed integer in the unit specified as item</span></p>
<p><span class=rvts67>DATEADD</span><span class=rvts63>(</span><span class=rvts61>item</span><span class=rvts63>,</span><span class=rvts61> increment</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>date</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- adds the given increment (can be negative too) in the specified unit (item)</span></p>
<p><span class=rvts63>{</span><span class=rvts67>YEAR</span><span class=rvts63>|</span><span class=rvts67>MONTH</span><span class=rvts63>|</span><span class=rvts67>DAY</span><span class=rvts63>}(</span><span class=rvts64>date</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- retrieve a single data component</span></p>
<p><span class=rvts62><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection3'>String functions</div>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>LEN</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- string length</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts63>LEFT(</span><span class=rvts61>string</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>length</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- left part of the string</span></p>
<p><span class=rvts63>RIGHT(</span><span class=rvts61>string</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>length</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- right part of the string</span></p>
<p><span class=rvts67>SUBSTRING</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>index</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>length</span><span class=rvts63>)</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>LTRIM</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- remove leading spaces</span></p>
<p><span class=rvts67>RTRIM</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- remove trailing spaces</span></p>
<p><span class=rvts64><br></span></p>
<p><span class=rvts67>CHARINDEX</span><span class=rvts63>(</span><span class=rvts61>search</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>text</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- indexOf-function, return 0 if search is not found in text</span></p>
<p><span class=rvts67>PATINDEX</span><span class=rvts63>(</span><span class=rvts66>'%regexp%'</span><span class=rvts63>,</span><span class=rvts61> string</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- return the index of the first matched regular expression (0 if not found)</span></p>
<p><span class=rvts67>REPLACE</span><span class=rvts63>(</span><span class=rvts64>text</span><span class=rvts63>,</span><span class=rvts61> search</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts67>replace</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- string replacement</span></p>
<p><span class=rvts67>STUFF</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>index</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>length</span><span class=rvts63>,</span><span class=rvts61> replacement</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- remove string[index...index+length] and insert replacement instead</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>LOWER</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- to lower case</span></p>
<p><span class=rvts67>UPPER</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- to upper case</span></p>
<p><span class=rvts67>REVERSE</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>)</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>DIFFERENCE</span><span class=rvts63>(</span><span class=rvts61>string1</span><span class=rvts63>,</span><span class=rvts61> string2</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- check similarity of strings (0=no similarty ... 4=both strings sound very similar)</span></p>
<p><span class=rvts67>SOUNDEX</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- a four digit sound identifier to compare the similary of strings (see DIFFERENCE)</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>QUOTENAME</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- returns a unicode string with delimiters added</span></p>
<p><span class=rvts67>REPLICATE</span><span class=rvts63>(</span><span class=rvts61>string</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts67>count</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- concatenate the string to itself count times</span></p>
<p><span class=rvts67>SPACE</span><span class=rvts63>(</span><span class=rvts67>count</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- returns a string with count empty spaces</span></p>
<p><span class=rvts67>STR</span><span class=rvts63>(</span><span class=rvts64>float</span><span class=rvts63>,</span><span class=rvts61> [length]</span><span class=rvts63>,</span><span class=rvts61> [precision]</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- convert the given float value to a string</span></p>
<p><span class=rvts61><br></span></p>
<p><span class=rvts67>ASCII</span><span class=rvts63>(</span><span class=rvts64>character</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- return the ASCII code (e.g. 65)</span></p>
<p><span class=rvts64>CHAR</span><span class=rvts63>(</span><span class=rvts61>ascii_code</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- return the character for the given ASCII code</span></p>
<p><span class=rvts67>UNICODE</span><span class=rvts63>(</span><span class=rvts64>character</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- return the UNICODE number</span></p>
<p><span class=rvts64>NCHAR</span><span class=rvts63>(</span><span class=rvts61>unicode_code</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- return the unicode caracter for the given code</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection4'>Casting functions</div>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>CAST</span><span class=rvts63>(</span><span class=rvts61>value </span><span class=rvts64>AS</span><span class=rvts61> </span><span class=rvts64>type</span><span class=rvts61>[(length)]</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- type conversion</span></p>
<p><span class=rvts67>CONVERT</span><span class=rvts63>(</span><span class=rvts64>type</span><span class=rvts61>[(length)]</span><span class=rvts63>,</span><span class=rvts61> value</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- same as cast</span></p>
<p><span class=rvts67>TRY_CONVERT</span><span class=rvts63>(</span><span class=rvts64>type</span><span class=rvts61>[(length)]</span><span class=rvts63>,</span><span class=rvts61> expression</span><span class=rvts63>,</span><span class=rvts61> style</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- convert expression to the given type and return NULL if this is not possible</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection5'>NULL functions</div>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>COALESCE</span><span class=rvts63>(</span><span class=rvts61>value1</span><span class=rvts63>,</span><span class=rvts61> value2</span><span class=rvts63>,</span><span class=rvts61> value3</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts63>...)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- return the first value that's not NULL</span></p>
<p><span class=rvts67>ISNULL</span><span class=rvts63>(</span><span class=rvts61>expression</span><span class=rvts63>,</span><span class=rvts61> value</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- returns expression if it is not null, otherwiese value is returned</span></p>
<p><span class=rvts67>NULLIF</span><span class=rvts63>(</span><span class=rvts61>expression1</span><span class=rvts63>,</span><span class=rvts61> expression2</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- returns NULL if both expressions are equal</span></p>
<p><span class=rvts67>GETANSINULL</span><span class=rvts63>(</span><span class=rvts66>'database_name'</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- returns 1 if the use of NULL values in the given DB is ANSI compliant</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection6'>ID functions</div>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>CURRENT_TIMESTAMP</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- current date and time (e.g. '2016-01-01 18:30:00.000')</span></p>
<p><span class=rvts67>NEWID</span><span class=rvts63>()</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- create a unique ID</span></p>
<p><span class=rvts67>NEWSEQUENTIALID</span><span class=rvts63>()</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- can be used only as the default value of a column</span></p>
<p><span class=rvts67><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection7'>User functions</div>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>CURRENT_USER</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- the current user</span></p>
<p><span class=rvts67>SYSTEM_USER</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- returns the ID of the currently logged on Windows user</span></p>
<p><span class=rvts67>USER_ID</span><span class=rvts63>(</span><span class=rvts66>'user_name'</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- retrieve the ID of a given user</span></p>
<p><span class=rvts67>USER_NAME</span><span class=rvts63>(</span><span class=rvts61>id</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- get the name of the user with the specified ID</span></p>
<p><span class=rvts67>DB_ID</span><span class=rvts63>(</span><span class=rvts66>'database_name'</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- retrieve the ID of a given database</span></p>
<p><span class=rvts67>DB_NAME</span><span class=rvts63>(</span><span class=rvts61>id</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- get the name of the database with the specified ID</span></p>
<p><span class=rvts62><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection8'>Metadata functions</div>
<p><span class=rvts67><br></span></p>
<p><span class=rvts67>COL_LENGTH</span><span class=rvts63>(</span><span class=rvts66>'table'</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts66>'column'</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- returns a column's length</span></p>
<p><span class=rvts67>DATALENGTH</span><span class=rvts63>(</span><span class=rvts61>expression</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- calculate the length in bytes</span></p>
<p><span class=rvts67>ISNUMERIC</span><span class=rvts63>(</span><span class=rvts61>expression</span><span class=rvts63>)</span></p>
<p><span class=rvts67>SERVERPROPERTY</span><span class=rvts63>(</span><span class=rvts61>property_name</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- retrieve a server property</span></p>
<p><span class=rvts67>COL_NAME</span><span class=rvts63>(</span><span class=rvts61>tab_id</span><span class=rvts63>,</span><span class=rvts61> col_index</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- COL_NAME(OBJECT_ID('my_table'), 3)</span></p>
<p><span class=rvts67>COLUMNPROPERTY</span><span class=rvts63>(</span><span class=rvts61>tab_id</span><span class=rvts63>,</span><span class=rvts61> col_index</span><span class=rvts63>,</span><span class=rvts61> property</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- property can be for example 'PRECISION'</span></p>
<p><span class=rvts67>DATABASEPROPERTYEX</span><span class=rvts63>(</span><span class=rvts66>'database_name'</span><span class=rvts63>,</span><span class=rvts61> property</span><span class=rvts63>)</span></p>
<p><span class=rvts67>DB_ID</span><span class=rvts63>(</span><span class=rvts66>'database_name'</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- get the database's ID</span></p>
<p><span class=rvts67>DB_NAME</span><span class=rvts63>(</span><span class=rvts61>database_id</span><span class=rvts63>)</span></p>
<p><span class=rvts67>INDEX_COL</span><span class=rvts63>(</span><span class=rvts64>table</span><span class=rvts63>,</span><span class=rvts61> i</span><span class=rvts63>,</span><span class=rvts61> </span><span class=rvts64>no</span><span class=rvts63>)</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- returns the name of the indexed column</span></p>
<p><span class=rvts67>INDEXPROPERTY</span><span class=rvts63>(</span><span class=rvts67>object_id</span><span class=rvts63>,</span><span class=rvts61> index_name</span><span class=rvts63>,</span><span class=rvts61> property</span><span class=rvts63>)</span></p>
<p><span class=rvts67>OBJECT_NAME</span><span class=rvts63>(</span><span class=rvts67>object_id</span><span class=rvts63>)</span></p>
<p><span class=rvts67>OBJECT_ID</span><span class=rvts63>(</span><span class=rvts67>object_name</span><span class=rvts63>)</span></p>
<p><span class=rvts67>OBJECTPROPERTY</span><span class=rvts63>(</span><span class=rvts67>object_id</span><span class=rvts63>,</span><span class=rvts61> property</span><span class=rvts63>)</span></p>
<p><span class=rvts67>FILEPROPERTY</span><span class=rvts63>(</span><span class=rvts64>filename</span><span class=rvts63>,</span><span class=rvts61> property</span><span class=rvts63>)</span></p>
<p><span class=rvts67>TYPEPROPERTY</span><span class=rvts63>(</span><span class=rvts64>type</span><span class=rvts63>,</span><span class=rvts61> property</span><span class=rvts63>)</span></p>
<p><span class=rvts61><br></span></p>
<p><span class=rvts9><br></span></p>
<div id='nodeSection9'>Binary operators</div>
<p><span class=rvts67><br></span></p>
<p><span class=rvts63>~</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- complement (negate)</span></p>
<p><span class=rvts63>&amp;</span><span class=rvts61> </span><span class=rvts63>|</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- bitwise and/or</span></p>
<p><span class=rvts63>^</span><span class=rvts61>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts62>-- XOR</span></p>
<p><span class=rvts61><br></span></p>
<p><br></p>
<p><br></p>

